--- pa_j_3.1x_6.xx.ml	2013-10-14 11:56:36.000000000 +0100
+++ pa_j.ml	2013-10-14 14:29:26.000000000 +0100
@@ -192,9 +192,13 @@
     | PaInt loc x1 x2 ->
         let loc = floc loc in
         PaInt loc x1 x2
-    | PaLab loc x1 x2 ->
+    | PaLab loc x1 ->
         let loc = floc loc in
-        PaLab loc (self x1) (vala_map (option_map self) x2)
+        PaLab loc
+          (vala_map
+             (List.map
+                (fun (x1, x2) â†’ (self x1, vala_map (option_map self) x2)))
+             x1)
     | PaLaz loc x1 ->
         let loc = floc loc in
         PaLaz loc (self x1)
@@ -296,9 +300,14 @@
     | ExInt loc x1 x2 ->
         let loc = floc loc in
         ExInt loc x1 x2
-    | ExLab loc x1 x2 ->
+    | ExLab loc x1 ->
         let loc = floc loc in
-        ExLab loc (reloc_patt floc sh x1) (vala_map (option_map self) x2)
+        ExLab loc
+          (vala_map
+             (List.map
+                (fun (x1, x2) ->
+                   (reloc_patt floc sh x1, vala_map (option_map self) x2)))
+             x1)
     | ExLaz loc x1 ->
         let loc = floc loc in
         ExLaz loc (self x1)
@@ -1914,8 +1923,8 @@
       | "include"; me = module_expr -> <:str_item< include $me$ >>
       | "module"; r = V (FLAG "rec"); l = V (LIST1 mod_binding SEP "and") ->
           <:str_item< module $_flag:r$ $_list:l$ >>
-      | "module"; "type"; i = V UIDENT "uid" ""; "="; mt = module_type ->
-          <:str_item< module type $_uid:i$ = $mt$ >>
+      | "module"; "type"; i = V ident ""; "="; mt = module_type ->
+          <:str_item< module type $_:i$ = $mt$ >>
       | "open"; i = V mod_ident "list" "" ->
           <:str_item< open $_:i$ >>
       | "type"; tdl = V (LIST1 type_decl SEP "and") ->
@@ -1989,10 +1998,10 @@
       | "module"; rf = V (FLAG "rec");
         l = V (LIST1 mod_decl_binding SEP "and") ->
           <:sig_item< module $_flag:rf$ $_list:l$ >>
-      | "module"; "type"; i = V UIDENT "uid" ""; "="; mt = module_type ->
-          <:sig_item< module type $_uid:i$ = $mt$ >>
-      | "module"; "type"; i = V UIDENT "uid" "" ->
-          <:sig_item< module type $_uid:i$ = 'abstract >>
+      | "module"; "type"; i = V ident ""; "="; mt = module_type ->
+          <:sig_item< module type $_:i$ = $mt$ >>
+      | "module"; "type"; i = V ident "" ->
+          <:sig_item< module type $_:i$ = 'abstract >>
       | "open"; i = V mod_ident "list" "" ->
           <:sig_item< open $_:i$ >>
       | "type"; tdl = V (LIST1 type_decl SEP "and") ->
